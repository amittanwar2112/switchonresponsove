[{"/home/amit/Desktop/react2/switchon_responsive/src/index.js":"1","/home/amit/Desktop/react2/switchon_responsive/src/App.js":"2","/home/amit/Desktop/react2/switchon_responsive/src/reportWebVitals.js":"3","/home/amit/Desktop/react2/switchon_responsive/src/store/reducers.js":"4","/home/amit/Desktop/react2/switchon_responsive/src/layout/LoginLayout.js":"5","/home/amit/Desktop/react2/switchon_responsive/src/mainlogic/MainLogic.js":"6","/home/amit/Desktop/react2/switchon_responsive/src/layout/Todolayout/TodoLayout.js":"7","/home/amit/Desktop/react2/switchon_responsive/src/layout/Newtodolayout/NewTodoLayout.js":"8","/home/amit/Desktop/react2/switchon_responsive/src/layout/Sidelayout/SideLayout.js":"9"},{"size":698,"mtime":1607245863000,"results":"10","hashOfConfig":"11"},{"size":2002,"mtime":1608225969000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607093979000,"results":"13","hashOfConfig":"11"},{"size":2059,"mtime":1607350665000,"results":"14","hashOfConfig":"11"},{"size":1004,"mtime":1608225854000,"results":"15","hashOfConfig":"11"},{"size":7696,"mtime":1608230579339,"results":"16","hashOfConfig":"11"},{"size":2838,"mtime":1608229310048,"results":"17","hashOfConfig":"11"},{"size":4708,"mtime":1608231050631,"results":"18","hashOfConfig":"11"},{"size":4175,"mtime":1608228287209,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lvdmgu",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"33"},"/home/amit/Desktop/react2/switchon_responsive/src/index.js",[],"/home/amit/Desktop/react2/switchon_responsive/src/App.js",["42"],"/home/amit/Desktop/react2/switchon_responsive/src/reportWebVitals.js",[],"/home/amit/Desktop/react2/switchon_responsive/src/store/reducers.js",[],"/home/amit/Desktop/react2/switchon_responsive/src/layout/LoginLayout.js",[],"/home/amit/Desktop/react2/switchon_responsive/src/mainlogic/MainLogic.js",["43","44","45","46","47"],"import React, { Component } from 'react'\nimport TodoLayout from '../layout/Todolayout/TodoLayout'\nimport NewTodoLayout from '../layout/Newtodolayout/NewTodoLayout'\nimport {connect} from 'react-redux';\nimport'bootstrap/dist/css/bootstrap.min.css';\nimport {Button,Card,ListGroup,Badge,Dropdown,ButtonGroup,Row,Col} from 'react-bootstrap';\nimport styles from './mainlogic.module.css';\n\n\nclass MainLogic extends Component {\n  \n    constructor(props) {\n        super(props);\n        this.renderPage=\"\";\n        this.taskNames=\"\";\n        this.description=\"\";\n        this.typeOfTask=\"Personall\"; \n        this.branch=\"To-Do\";\n        this.date=\"\";\n        this.toDoTaskCard=[]; \n        this.inProgTaskCard=[]; \n        this.doneTaskCard=[]; \n        this.i = 1;\n        this.state ={\n        newTask: false,\n        TaskValue: 2,\n        subtaskcard : [{ key: 0, placeholder: \"Sub Task 1\", value: '', onChange: (event) => { console.log('Event', event); this.changesubtask(event, 0); } }],\n        }\n      }\n     \n    checknewtask = (event) => {\n        this.setState({newTask : true}); \n    }  \n    backtopage = (event) => {\n        this.setState({newTask : false,subtaskcard : [{ key: 0, placeholder: \"Sub Task 1\", value: '', onChange: (event) => { console.log('Event', event); this.changesubtask(event, 0); } }]}); \n        \n    }\n    subtask = (event) => {\n        //console.log(\"insubtask\")\n        let index = this.i;\n        let subtaskname = \"Sub task\" +  \" \" + (this.i + 1)\n        let subtaskcardlist = [...this.state.subtaskcard];\n        //subtaskcardlist.push(<Form.Control key={this.i} onChange={this.changesubtask} style={{marginTop:\"10px\"}} placeholder={subtaskname} />)\n        subtaskcardlist.push({ key: index, placeholder: subtaskname, value: '', onChange: (event) => { console.log('Event', event); this.changesubtask(event, index); } })\n        \n        //console.log(subtaskcardlist)\n        this.setState({subtaskcard : subtaskcardlist}); \n        //console.log( this.state.subtaskcard)\n        this.i=this.i+1;\n        \n    } \n    changesubtask = (event, idx) =>{\n        let subtaskcardlist = [...this.state.subtaskcard];\n        let subtask = subtaskcardlist[idx];\n        console.log(idx,subtaskcardlist)\n        subtask.value = event.target.value;\n        subtaskcardlist[idx] = subtask;\n        this.setState({subtaskcard : subtaskcardlist});\n        console.log(this.state.subtaskcard);\n        //this.taskNames =  event.target.value\n\n    } \n    taskName = (event) =>{\n        console.log(event.target.value)\n        this.taskNames =  event.target.value\n\n    }  \n    descriptionName = (event) =>{\n        console.log(event.target.value)\n        this.description =  event.target.value\n    } \n    selectitype = (event) =>{\n        console.log(event.target.value)\n        this.typeOfTask =  event.target.value\n    } \n    selectBranch = (event) =>{\n        console.log(event.target.value)\n        this.branch =  event.target.value\n\n    } \n    selectDate = (event) =>{\n        console.log(event.target.value)\n        this.date =  event.target.value\n    } \n    finalCreate = (event) =>{\n        let x = <Card style={{margin:\"10px\"}} > \n                        <Row>\n                            <Col>\n                                <Badge variant=\"success\" className={styles.badgeclass}>{this.typeOfTask}</Badge>\n                            </Col>\n                            <Col>\n                            </Col>\n                        </Row>\n                        <Card.Body>\n                            <Card.Title> \n                                {this.taskNames} \n                                <span className={styles.insidecardclass}>\n                                {this.date}  \n                                </span>\n                            </Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">{this.description}</Card.Subtitle>\n                        </Card.Body>\n                        <ListGroup variant=\"flush\">\n                            {this.state.subtaskcard.map( subtsk => {return <ListGroup.Item key={subtsk.key} >{subtsk.value}</ListGroup.Item> })}\n                        </ListGroup>\n                </Card>\n        if(this.branch === \"To-Do\"){\n            //console.log(\"inside todo\")\n            this.toDoTaskCard.push(x);\n            this.props.onIncNoTodo();\n            this.props.toDoTask(this.toDoTaskCard);\n        }\n        if(this.branch === \"In-Progress\"){\n            //console.log(\"inside progres\")\n            this.inProgTaskCard.push(x);\n            this.props.onIncNoInProg();\n            this.props.toInProg(this.inProgTaskCard);\n        }\n        if(this.branch === \"Done\"){\n            //console.log(\"inside done\")\n            this.doneTaskCard.push(x);\n            this.props.onIncNoDone();\n            this.props.toDone(this.doneTaskCard);\n        }\n        if(this.typeOfTask === \"Personall\"){\n            \n            this.props.onIncNoPersonal();\n        }\n        if(this.typeOfTask === \"Official\"){\n           \n            this.props.onIncNoOfficial();\n        }\n        if(this.typeOfTask === \"Miscel...\"){\n        \n            this.props.onIncNoMsic();\n        }\n        this.setState({newTask : false,subtaskcard : [{ key: 0, placeholder: \"Sub Task 1\", value: '', onChange: (event) => { console.log('Event', event); this.changesubtask(event, 0); } }]}); \n           \n    } \n    render() {\n        console.log(\"no od todo\");\n        console.log(this.props.notodo);\n        console.log(\"no of inprog\");\n        console.log(this.props.noinprog);\n        console.log(\"no of done\");\n        console.log(this.props.nodone);\n       if(this.state.newTask){\n        this.renderPage= <NewTodoLayout \n        back={this.backtopage}\n        subtask={this.subtask}\n        cardlist ={this.state.subtaskcard}\n        taskname={this.taskNames}\n        description={this.descriptionName}\n        typeoftask={this.selectitype}\n        branchto ={this.selectBranch}\n        dateselect={this.selectDate}\n        create={this.finalCreate}\n        subtaskv={this.changesubtask}\n        ></NewTodoLayout>\n       }\n       else {\n        this.renderPage= <TodoLayout \n        todocard={this.props.todo}\n        progcard={this.props.inprog} \n        donecard={this.props.done}  \n        branchtodo ={this.branch}\n        newtask={this.checknewtask}> \n        </TodoLayout>;\n       }\n    return (\n      <div>\n          {this.renderPage}\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n    return {\n        notodo : state.nooftodo,\n        noinprog : state.noofinprog,\n        nodone : state.noofdone,\n        nopersonal: state.nofopesonal,\n        noofficial: state.noofofficial,\n        nomsic: state.noofmsic,\n        noall : state.noofall,\n        todo : state.todo,\n        inprog : state.inprog,\n        done : state.done\n    };\n};\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        onIncNoTodo : () => dispatch({type :'INCREMENTTODO'}),\n        onIncNoInProg : () => dispatch({type :'INCREMENTINPROG'}),\n        onIncNoDone : () => dispatch({type :'INCREMENTDONE'}),\n        onIncNoPersonal : () => dispatch({type :'INCREMENTPERSONAL'}),\n        onIncNoOfficial : () => dispatch({type :'INCREMENTOFFICIAL'}),\n        onIncNoMsic : () => dispatch({type :'INCREMENTMSIC'}),\n        onIncNoMsic : () => dispatch({type :'INCREMENTMSIC'}),\n        toDoTask : (todotaskvalue) => dispatch({type :'TODOTASK',value :todotaskvalue}),\n        toInProg : (toinprogvalue) => dispatch({type :'TOINPROG',value :toinprogvalue}),\n        toDone : (todonevalue) => dispatch({type :'TODONE',value : todonevalue})\n    };\n};\nexport default connect(mapStateToProps,mapDispatchToProps)(MainLogic)\n",["48","49"],"/home/amit/Desktop/react2/switchon_responsive/src/layout/Todolayout/TodoLayout.js",["50"],"import React from 'react'\nimport'bootstrap/dist/css/bootstrap.min.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {Button,Container,Row,Col,Form,FormControl,InputGroup,Card} from 'react-bootstrap';\nimport SideLayout from '../Sidelayout/SideLayout'\nimport './todolayout.css';\n\nfunction TodoLayout(props) {\n \n  return (\n    <div>\n        <Container fluid=\"md\">\n            <Row>\n                <Col xs={12} lg={4} md={4} className=\"sidelayoutclass1\">\n                        <SideLayout ></SideLayout>\n                </Col>\n                <Col xs={12} lg={8} md={8} >\n                        <Row>\n                            <Col >\n                                <InputGroup style={{width:\"100%\",margin:\"10px\"}}>\n                                    <InputGroup.Prepend>\n                                    <InputGroup.Text className=\"inputsearchiconclass\"><SearchIcon /></InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <FormControl className=\"inputsearchclass\" placeholder=\"Search Task By Title\" />\n                                    <Button style={{marginLeft:\"10px\"}}variant=\"outline-info\" onClick={props.newtask}>New Task</Button>\n                                    <input type=\"date\" className=\"inputclass\" ></input>\n                                </InputGroup>\n\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={12} lg={4} md={4}>\n                                <Card className=\"cardclass\" >\n                                    <Card.Header  className=\"cardheaderclass cardheaderclass1\" >To Do</Card.Header>\n                                    <Card.Body className=\"cardbodyclass\">{props.todocard}</Card.Body>\n                                </Card>\n                            </Col>\n                            <Col xs={12} lg={4} md={4}>\n                                <Card className=\"cardclass\" >\n                                    <Card.Header className=\"cardheaderclass cardheaderclass2\" >In-progress</Card.Header>\n                                    <Card.Body className=\"cardbodyclass\">{props.progcard}</Card.Body>\n                                </Card>\n                            </Col>\n                            <Col xs={12} lg={4} md={4}>\n                                <Card className=\"cardclass\" >\n                                    <Card.Header className=\"cardheaderclass cardheaderclass3\" >Done</Card.Header>\n                                    <Card.Body className=\"cardbodyclass\" >{props.donecard}</Card.Body>\n                                </Card>\n                            </Col>\n                        </Row>\n                </Col>\n            </Row>\n    \n        </Container>\n       \n    </div>\n  )\n}\n\nexport default TodoLayout\n","/home/amit/Desktop/react2/switchon_responsive/src/layout/Newtodolayout/NewTodoLayout.js",[],"/home/amit/Desktop/react2/switchon_responsive/src/layout/Sidelayout/SideLayout.js",["51"],"import React from 'react'\nimport'bootstrap/dist/css/bootstrap.min.css';\nimport {Row,Col,ListGroup,Button,ButtonGroup} from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport {Pie,} from 'react-chartjs-2';\nimport './sidelayout.css';\nimport { TrendingUpRounded } from '@material-ui/icons';\n\nfunction SideLayout(props) {\n    const graphstate = {\n        labels: ['To-Do', 'In-Progress', 'Done'],\n        datasets: [\n          {\n            label: 'Branch',\n            backgroundColor: [\n              '#B21F00',\n              '#C9DE00',\n              '#2FDE00',\n              '#00A6B4',\n              '#6800B4'\n            ],\n            hoverBackgroundColor: [\n            '#501800',\n            '#4B5000',\n            '#175000',\n            '#003350',\n            '#35014F'\n            ],\n            data: [props.notodo , props.noinprog, props.nodone]\n          }\n        ]\n      }\n  return (\n    <div>\n        <Row>\n            <Col style={{textAlign:\"right\"}}>\n                <ButtonGroup aria-label=\"Basic example\" className=\"cardlist\" >\n                        <Button variant=\"info\" className=\"buttonclass1\">User</Button>\n                        <Button variant=\"outline-primary\" className=\"buttonclass2\"  onClick={props.onLogout}>Logout</Button>\n                </ButtonGroup>\n            </Col>\n        </Row>\n        <Row>\n            <Col >\n                <Row>\n                    <Col>\n                        <ListGroup horizontal className=\"cardlistmargin \">\n                            <ListGroup.Item  className=\"cardlistclass cardlist1\">All</ListGroup.Item>\n                            <ListGroup.Item className=\"cardlistclass\">{props.noall}</ListGroup.Item>\n                        </ListGroup>\n                    </Col>\n                    <Col>\n                        <ListGroup horizontal className=\"cardlistmargin\">\n                            <ListGroup.Item  className=\"cardlistclass cardlist2\">Personal</ListGroup.Item>\n                            <ListGroup.Item className=\"cardlistclass\">{props.nopersonal}</ListGroup.Item>\n                        </ListGroup>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <ListGroup horizontal className=\"cardlistmargin\">\n                            <ListGroup.Item  className=\"cardlistclass cardlist3\">Official</ListGroup.Item>\n                            <ListGroup.Item className=\"cardlistclass\">{props.noofficial}</ListGroup.Item>\n                        </ListGroup>\n                    </Col>\n                    <Col>\n                        <ListGroup horizontal className=\"cardlistmargin\">\n                            <ListGroup.Item className=\"cardlistclass cardlist4\" >Misc.</ListGroup.Item>\n                            <ListGroup.Item className=\"cardlistclass\">{props.nomsic}</ListGroup.Item>\n                        </ListGroup>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <div >\n                    <Pie data={graphstate}\n                            options={{\n                                title:{\n                                display:true,\n                                text:'Branch',\n                                fontSize:20\n                                },\n                                legend:{\n                                display:true,\n                                position:'right',\n                                fontSize:10\n                                }\n                            }}\n                    />\n                </div>\n            </Col>\n        </Row>\n\n    </div>\n  )\n}\nconst mapStateToProps = state =>{\n    return {\n        notodo : state.nooftodo,\n        noinprog : state.noofinprog,\n        nodone : state.noofdone,\n        nopersonal: state.nofopesonal,\n        noofficial: state.noofofficial,\n        nomsic: state.noofmsic,\n        noall : state.noofall\n    };\n};\nconst mapDispatchToProps = dispatch =>{\n    return {\n        onLogout : () => dispatch({type :'LOGOUT',value : \"\"}),\n    };\n  };\nexport default connect(mapStateToProps,mapDispatchToProps)(SideLayout)\n\n",{"ruleId":"52","severity":1,"message":"53","line":29,"column":13,"nodeType":"54","messageId":"55","endLine":29,"endColumn":20},{"ruleId":"52","severity":1,"message":"56","line":6,"column":9,"nodeType":"54","messageId":"55","endLine":6,"endColumn":15},{"ruleId":"52","severity":1,"message":"57","line":6,"column":37,"nodeType":"54","messageId":"55","endLine":6,"endColumn":45},{"ruleId":"52","severity":1,"message":"58","line":6,"column":46,"nodeType":"54","messageId":"55","endLine":6,"endColumn":57},{"ruleId":"59","severity":1,"message":"60","line":41,"column":38,"nodeType":"61","messageId":"62","endLine":41,"endColumn":39},{"ruleId":"63","severity":1,"message":"64","line":200,"column":9,"nodeType":"65","messageId":"66","endLine":200,"endColumn":20},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"52","severity":1,"message":"71","line":4,"column":34,"nodeType":"54","messageId":"55","endLine":4,"endColumn":38},{"ruleId":"52","severity":1,"message":"72","line":7,"column":10,"nodeType":"54","messageId":"55","endLine":7,"endColumn":27},"no-unused-vars","'reqbody' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Dropdown' is defined but never used.","'ButtonGroup' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-dupe-keys","Duplicate key 'onIncNoMsic'.","ObjectExpression","unexpected","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"'Form' is defined but never used.","'TrendingUpRounded' is defined but never used.","no-global-assign","no-unsafe-negation"]